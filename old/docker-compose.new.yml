version: '3.8'

# CP-WhisperX-App Dockerized Pipeline
# Each service represents one step in the workflow

services:
  # Base image (not a service, used for building others)
  base:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-base:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/base/Dockerfile
    profiles:
      - build

  # Step 1: FFmpeg Demux - Extract audio
  demux:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-demux:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/demux/Dockerfile
    volumes:
      - ./in:/app/in:ro
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: ${DOCKER_MEMORY_LIMIT:-10g}
    cpus: ${DOCKER_CPU_LIMIT:-4}
    profiles:
      - pipeline

  # Step 2: TMDB Metadata Fetch
  tmdb:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-tmdb:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/tmdb/Dockerfile
    volumes:
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: 2g
    cpus: 1
    profiles:
      - pipeline

  # Step 3: Pre-ASR NER
  pre-ner:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-pre-ner:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/pre-ner/Dockerfile
    volumes:
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: 4g
    cpus: 2
    profiles:
      - pipeline

  # Step 4: Silero VAD
  silero-vad:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-silero-vad:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/silero-vad/Dockerfile
    volumes:
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: 4g
    cpus: 2
    profiles:
      - pipeline

  # Step 5: PyAnnote VAD
  pyannote-vad:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-pyannote-vad:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/pyannote-vad/Dockerfile
    volumes:
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: 4g
    cpus: 2
    profiles:
      - pipeline

  # Step 6: PyAnnote Diarization
  diarization:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-diarization:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/diarization/Dockerfile
    volumes:
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: ${DOCKER_MEMORY_LIMIT:-10g}
    cpus: ${DOCKER_CPU_LIMIT:-4}
    shm_size: ${DOCKER_SHM_SIZE:-2g}
    profiles:
      - pipeline

  # Step 7: WhisperX ASR + Forced Alignment
  whisperx:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-whisperx:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/whisperx/Dockerfile
    volumes:
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: ${DOCKER_MEMORY_LIMIT:-10g}
    cpus: ${DOCKER_CPU_LIMIT:-4}
    shm_size: ${DOCKER_SHM_SIZE:-2g}
    profiles:
      - pipeline

  # Step 8: Post-ASR NER
  post-ner:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-post-ner:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/post-ner/Dockerfile
    volumes:
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: 4g
    cpus: 2
    profiles:
      - pipeline

  # Step 9: Subtitle Generation
  subtitle-gen:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-subtitle-gen:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/subtitle-gen/Dockerfile
    volumes:
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: 2g
    cpus: 1
    profiles:
      - pipeline

  # Step 10: FFmpeg Mux - Embed subtitles
  mux:
    image: ${DOCKER_REGISTRY:-rajiup}/cp-whisperx-app-mux:${DOCKER_TAG:-latest}
    build:
      context: .
      dockerfile: docker/mux/Dockerfile
    volumes:
      - ./in:/app/in:ro
      - ./out:/app/out
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./config:/app/config:ro
      - ./shared:/app/shared:ro
    env_file:
      - ./config/.env
    mem_limit: ${DOCKER_MEMORY_LIMIT:-10g}
    cpus: ${DOCKER_CPU_LIMIT:-4}
    profiles:
      - pipeline

networks:
  default:
    name: cp-whisperx-app-network
